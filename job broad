<!doctype html>
<html>
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>JobBoard — Web Frontend</title>
  <style>
    :root{--primary:#0b4a8b;--card:#fff;--muted:#666}
    body{font-family:Inter,system-ui,Arial,Helvetica,sans-serif;margin:0;background:#f6f8fb;color:#111}
    header{background:var(--primary);color:#fff;padding:.9rem 1rem;position:sticky;top:0;z-index:10}
    .container{max-width:1000px;margin:1rem auto;padding:1rem}
    .grid{display:grid;grid-template-columns:1fr;gap:1rem}
    @media(min-width:900px){.grid{grid-template-columns:2fr 1fr}}
    .card{background:var(--card);padding:1rem;border-radius:12px;box-shadow:0 1px 6px rgba(0,0,0,0.06)}
    .job{padding:.6rem;border-bottom:1px solid #eee}
    .featured{border-left:4px solid #ffb703;padding-left:.8rem}
    .btn{display:inline-block;padding:.45rem .7rem;border-radius:8px;background:var(--primary);color:white;text-decoration:none;border:none;cursor:pointer}
    input,textarea,select{width:100%;padding:.6rem;margin:.3rem 0;border-radius:6px;border:1px solid #ddd;box-sizing:border-box}
    nav a{color:white;margin-right:1rem;text-decoration:none}
    footer{padding:1rem;text-align:center;color:var(--muted)}
    .small{font-size:.9rem;color:var(--muted)}
    .row{display:flex;gap:.5rem;align-items:center}
    .file-info{font-size:.85rem;color:var(--muted)} 
  </style>
  <!-- React + Babel (dev) -->
  <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
  <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
</head>
<body>
  <header>
    <div class="container" style="display:flex;justify-content:space-between;align-items:center">
      <div>
        <strong style="font-size:1.1rem">JobBoard</strong>
        <nav style="display:inline-block;margin-left:1rem">
          <a href="#/">Home</a>
          <a href="#/jobs">Jobs</a>
          <a href="#/dashboard">Dashboard</a>
        </nav>
      </div>
      <div id="auth-links" class="small"></div>
    </div>
  </header>

  <div id="root" class="container"></div>

  <footer>Built with React + Axios — connects to backend at <code>/api</code></footer>

  <script type="text/babel">
    const api = axios.create({ baseURL: '/api' });

    // token helpers
    function setToken(t){ if(t){ localStorage.setItem('jb_token', t); api.defaults.headers.common['Authorization']='Bearer '+t; } }
    function getToken(){ return localStorage.getItem('jb_token'); }
    function clearToken(){ localStorage.removeItem('jb_token'); delete api.defaults.headers.common['Authorization']; }

    if (getToken()) api.defaults.headers.common['Authorization'] = 'Bearer ' + getToken();

    function useHashRoute() {
      const [route, setRoute] = React.useState(window.location.hash.replace('#','') || '/');
      React.useEffect(()=> { const onHash = ()=> setRoute(window.location.hash.replace('#','')||'/'); window.addEventListener('hashchange', onHash); return ()=> window.removeEventListener('hashchange', onHash); }, []);
      return [route, setRoute];
    }

    function App(){
      const [route] = useHashRoute();
      React.useEffect(()=> renderAuthLinks(), []);
      return (
        <div>
          {route === '/' && <Home />}
          {route.startsWith('/jobs') && <Jobs route={route} />}
          {route === '/dashboard' && <Dashboard />}
          {route === '/login' && <Auth mode="login" />}
          {route === '/register' && <Auth mode="register" />}
        </div>
      );
    }

    function renderAuthLinks(){
      const el = document.getElementById('auth-links');
      const token = getToken();
      if (!token){
        el.innerHTML = `<a href="#/login" style="color:white;margin-right:1rem">Log in</a><a href="#/register" style="color:white">Sign up</a>`;
      } else {
        try {
          const payload = JSON.parse(atob(getToken().split('.')[1]));
          el.innerHTML = `<span style="margin-right:1rem">Hi, ${payload.email || 'user'}</span><a href="#/dashboard" style="color:white;margin-right:1rem">Dashboard</a><a id="lnk-logout" style="color:white;cursor:pointer">Logout</a>`;
          document.getElementById('lnk-logout').onclick = ()=>{ clearToken(); location.hash = '#/'; renderAuthLinks(); };
        } catch(e){ el.innerHTML = ''; }
      }
    }

    function Home(){
      const [featured, setFeatured] = React.useState([]);
      React.useEffect(()=> { api.get('/jobs').then(r => setFeatured(r.data.jobs.filter(j=>j.isFeatured).slice(0,5))).catch(()=>{}); }, []);
      return (
        <div className="grid">
          <div className="card">
            <h2>Welcome to JobBoard</h2>
            <p className="small">Search jobs, apply, and manage postings — demo frontend.</p>
            <SearchBar />
            <h3 style={{marginTop:'1rem'}}>Featured</h3>
            {featured.length === 0 && <p className="small">No featured jobs yet.</p>}
            {featured.map(j => <div key={j._id} className="job featured"><a href={`#/jobs/${j._id}`}>{j.title}</a><div className="small">{j.company} • {j.location}</div></div>)}
          </div>
          <div className="card">
            <h3>Quick</h3>
            <p><a className="btn" href="#/jobs">Browse Jobs</a></p>
            <p><a className="btn" href="#/register">Create Account</a></p>
          </div>
        </div>
      );
    }

    function SearchBar(){
      const [q, setQ] = React.useState('');
      const go = ()=> { location.hash = '#/jobs?q=' + encodeURIComponent(q); };
      return (
        <div style={{marginTop:'.5rem'}}>
          <div className="row">
            <input placeholder="Search jobs, company, location" value={q} onChange={e=>setQ(e.target.value)} />
            <button className="btn" onClick={go}>Search</button>
          </div>
        </div>
      );
    }

    function Jobs({route}){
      const [jobs, setJobs] = React.useState([]);
      const [jobDetail, setJobDetail] = React.useState(null);
      const q = new URLSearchParams(route.split('?')[1]).get('q') || '';
      React.useEffect(()=>{
        if (route.startsWith('/jobs/') && route.split('/').length>2){
          const id = route.split('/')[2];
          api.get('/jobs/'+id).then(r=>setJobDetail(r.data.job)).catch(()=>setJobDetail(null));
        } else {
          api.get('/jobs', { params: { q } }).then(r=>setJobs(r.data.jobs)).catch(()=>setJobs([]));
        }
      },[route]);

      if (jobDetail) return (
        <div>
          <p><a href="#/jobs">← Back</a></p>
          <div className="card">
            <h2>{jobDetail.title}</h2>
            <div className="small">{jobDetail.company} • {jobDetail.location}</div>
            <p style={{whiteSpace:'pre-wrap', marginTop:'.6rem'}}>{jobDetail.description}</p>
            <ApplyWidget job={jobDetail}/>
          </div>
        </div>
      );

      return (
        <div className="grid">
          <div className="card">
            <h2>Jobs {q ? ` — search: ${q}` : ''}</h2>
            {jobs.length===0 && <p className="small">No jobs found.</p>}
            {jobs.map(j => <div key={j._id} className="job"><a href={`#/jobs/${j._id}`}>{j.title}</a><div style={{float:'right'}}>{j.location}</div><div style={{clear:'both'}}/></div>)}
          </div>
          <div className="card">
            <h3>Filters</h3>
            <p className="small">Add tag filters, location filters, etc., as needed.</p>
          </div>
        </div>
      );
    }

    function ApplyWidget({job}){
      const [cover, setCover] = React.useState('');
      const [file, setFile] = React.useState(null);
      const [msg, setMsg] = React.useState('');
      const [sending, setSending] = React.useState(false);

      const apply = async ()=>{
        const token = getToken();
        if (!token){ location.hash = '#/login'; return; }
        setSending(true); setMsg('');
        const fd = new FormData();
        fd.append('coverLetter', cover);
        if (file) fd.append('resume', file);
        try {
          const res = await fetch('/api/jobs/'+job._id+'/apply', { method:'POST', body: fd, headers: { Authorization: 'Bearer '+token } });
          const data = await res.json();
          if (data.ok) { setMsg('Application submitted — good luck!'); setCover(''); setFile(null); } else setMsg(data.error || 'Failed to apply');
        } catch(e){ setMsg('Network or server error'); }
        setSending(false);
      };

      return (
        <div style={{marginTop:'1rem'}}>
          <h4>Apply for this job</h4>
          <textarea placeholder="Cover letter (optional)" value={cover} onChange={e=>setCover(e.target.value)}></textarea>
          <div className="row" style={{marginTop:'.4rem'}}>
            <input id="file" type="file" onChange={e=>setFile(e.target.files[0])} />
          </div>
          <div style={{marginTop:'.5rem'}}>
            <button className="btn" onClick={apply} disabled={sending}>{sending ? 'Sending…' : 'Submit application'}</button>
            <div className="small" style={{marginTop:'.4rem'}}>{msg}</div>
          </div>
        </div>
      );
    }

    function Dashboard(){
      const [user, setUser] = React.useState(null);
      const [jobs, setJobs] = React.useState([]);
      const [apps, setApps] = React.useState([]);

      React.useEffect(()=>{
        const token = getToken();
        if (!token){ location.hash = '#/login'; return; }
        api.get('/auth/me').then(r=> setUser(r.data.user)).catch(()=>{});
        api.get('/my/jobs').then(r=> setJobs(r.data.jobs)).catch(()=>{});
        api.get('/my/applications').then(r=> setApps(r.data.applications)).catch(()=>{});
      },[]);

      return (
        <div className="grid">
          <div className="card">
            <h2>Dashboard</h2>
            {user && <div className="small">Signed in as <strong>{user.email}</strong> — role: {user.role}</div>}
            <section style={{marginTop:'.8rem'}}>
              <h3>Your Jobs</h3>
              {jobs.length === 0 && <p className="small">No posted jobs.</p>}
              {jobs.map(j=> <div key={j._id} className="job"><a href={`#/jobs/${j._id}`}>{j.title}</a> <div className="small">{new Date(j.createdAt).toLocaleDateString()}</div></div>)}
            </section>

            <section style={{marginTop:'.8rem'}}>
              <h3>Your Applications</h3>
              {apps.length === 0 && <p className="small">No applications yet.</p>}
              {apps.map(a => <div key={a._id} className="job"><div><strong>{a.job?.title || '—'}</strong></div><div className="small">Status: {a.status}</div></div>)}
            </section>
          </div>

          <div className="card">
            <h3>Profile</h3>
            <ProfilePanel user={user} />
          </div>
        </div>
      );
    }

    function ProfilePanel({user}){
      const [name, setName] = React.useState(user?.name || '');
      const [company, setCompany] = React.useState(user?.company || '');
      const [resumeFile, setResumeFile] = React.useState(null);
      const [msg, setMsg] = React.useState('');

      React.useEffect(()=> { if (user){ setName(user.name || ''); setCompany(user.company || ''); } }, [user]);

      const save = async ()=>{
        try {
          await api.post('/profile', { name, company });
          setMsg('Saved.');
        } catch(e){ setMsg('Save failed.'); }
      };

      const uploadResume = async ()=>{
        const token = getToken(); if (!token) { location.hash = '#/login'; return; }
        if (!resumeFile) { setMsg('Pick a file first'); return; }
        const fd = new FormData(); fd.append('resume', resumeFile);
        try {
          const res = await fetch('/api/candidate/upload-resume', { method:'POST', body: fd, headers: { Authorization: 'Bearer '+token } });
          const data = await res.json();
          if (data.ok) setMsg('Resume uploaded.');
          else setMsg(data.error || 'Upload failed');
        } catch(e){ setMsg('Upload error'); }
      };

      return (
        <div>
          <input placeholder="Name" value={name} onChange={e=>setName(e.target.value)} />
          <input placeholder="Company (employers)" value={company} onChange={e=>setCompany(e.target.value)} />
          <div style={{marginTop:'.4rem'}}>
            <button className="btn" onClick={save}>Save</button>
          </div>
          <hr />
          <h4>Upload resume (candidate)</h4>
          <input type="file" onChange={e=>setResumeFile(e.target.files[0])} />
          <div style={{marginTop:'.4rem'}}><button className="btn" onClick={uploadResume}>Upload resume</button></div>
          <div className="small" style={{marginTop:'.6rem'}}>{msg}</div>
        </div>
      );
    }

    function Auth({mode}){
      const [email, setEmail] = React.useState('');
      const [password, setPassword] = React.useState('');
      const [name, setName] = React.useState('');
      const [role, setRole] = React.useState('candidate');
      const [company, setCompany] = React.useState('');
      const [msg, setMsg] = React.useState('');

      const submit = async ()=>{
        setMsg('');
        try {
          if (mode === 'register'){
            const res = await api.post('/auth/register', { name, email, password, role, company });
            setToken(res.data.token);
            renderAuthLinks();
            location.hash = '#/';
          } else {
            const res = await api.post('/auth/login', { email, password });
            setToken(res.data.token);
            renderAuthLinks();
            location.hash = '#/';
          }
        } catch(e){
          setMsg('Auth failed.');
        }
      };

      return (
        <div className="card" style={{maxWidth:600}}>
          <h2>{mode === 'register' ? 'Register' : 'Login'}</h2>
          {mode === 'register' && <input placeholder="Name" value={name} onChange={e=>setName(e.target.value)} />}
          <input placeholder="Email" value={email} onChange={e=>setEmail(e.target.value)} />
          <input placeholder="Password" type="password" value={password} onChange={e=>setPassword(e.target.value)} />
          {mode === 'register' && (
            <>
              <select value={role} onChange={e=>setRole(e.target.value)}>
                <option value="candidate">Candidate</option>
                <option value="employer">Employer</option>
              </select>
              {role === 'employer' && <input placeholder="Company name" value={company} onChange={e=>setCompany(e.target.value)} />}
            </>
          )}
          <div style={{marginTop:'.6rem'}}>
            <button className="btn" onClick={submit}>{mode==='register'?'Sign up':'Log in'}</button>
            <div className="small" style={{marginTop:'.5rem', color:'red'}}>{msg}</div>
          </div>
        </div>
      );
    }

    ReactDOM.createRoot(document.getElementById('root')).render(<App />);
  </script>
</body>
</html>
